<?xml version="1.0" encoding="UTF-8" ?>
<pages:BaseContentPage xmlns:pages="clr-namespace:TeamConnect.Views"
                       xmlns="http://xamarin.com/schemas/2014/forms"
                       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                       xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
                       xmlns:viewmodels="clr-namespace:TeamConnect.ViewModels"
                       x:Class="TeamConnect.Views.AddLeavePage"
                       x:DataType="viewmodels:AddLeavePageViewModel"
                       BackgroundColor="{DynamicResource tcolor_i3}"
                       Title="{xct:Translate NewLeave}">

    <StackLayout Padding="24, 34, 24, 24"
                 Spacing="16">

        <Label Style="{DynamicResource tstyle_i1_1}"
               Text="{xct:Translate RequestType}"/>

        <Frame HasShadow="False"
               Padding="16, 18"
               CornerRadius="16"
               BorderColor="{DynamicResource appcolor_i2}"
               BackgroundColor="Transparent">

            <Frame.GestureRecognizers>

                <TapGestureRecognizer Command="{Binding SelectRequestTypeCommand}"/>

            </Frame.GestureRecognizers>

            <Label Text="{xct:Translate SelectType}"
                   Style="{DynamicResource tstyle_i2_1}">

                <Label.Triggers>

                    <DataTrigger TargetType="Label"
                                 Binding="{Binding SelectedRequestType, Converter={StaticResource isNotNullOrEmptyConverter}}"
                                 Value="True">

                        <Setter Property="Text" Value="{Binding SelectedRequestType}"/>

                        <Setter Property="TextColor" Value="{DynamicResource tcolor_i1}"/>

                    </DataTrigger>

                </Label.Triggers>

            </Label>

        </Frame>

        <Label Style="{DynamicResource tstyle_i1_1}"
               Text="{xct:Translate Duration}"
               Margin="0, 34, 0, 0"/>

        <Frame HasShadow="False"
               Padding="16, 18"
               CornerRadius="16"
               BorderColor="{DynamicResource appcolor_i2}"
               BackgroundColor="Transparent">

            <Frame.GestureRecognizers>

                <TapGestureRecognizer Command="{Binding SelectStartDateCommand}"/>

            </Frame.GestureRecognizers>

            <Label Text="{xct:Translate From}"
                   Style="{DynamicResource tstyle_i2_1}">

                <Label.Triggers>

                    <DataTrigger TargetType="Label"
                                 Binding="{Binding IsStartDateChanged}"
                                 Value="True">

                        <Setter Property="Text" Value="{Binding StartDate, StringFormat='{0:dd MMM yyyy}'}"/>

                        <Setter Property="TextColor" Value="{DynamicResource tcolor_i1}"/>

                    </DataTrigger>

                </Label.Triggers>

            </Label>

        </Frame>

        <Frame HasShadow="False"
               Padding="16, 18"
               CornerRadius="16"
               BorderColor="{DynamicResource appcolor_i2}"
               BackgroundColor="Transparent">

            <Frame.GestureRecognizers>

                <TapGestureRecognizer Command="{Binding SelectEndDateCommand}"/>

            </Frame.GestureRecognizers>
            
            <Label Text="{xct:Translate To}"
                   Style="{DynamicResource tstyle_i2_1}">

                <Label.Triggers>

                    <DataTrigger TargetType="Label"
                                 Binding="{Binding IsEndDateChanged}"
                                 Value="True">

                        <Setter Property="Text" Value="{Binding EndDate, StringFormat='{0:dd MMM yyyy}'}"/>

                        <Setter Property="TextColor" Value="{DynamicResource tcolor_i1}"/>

                    </DataTrigger>

                </Label.Triggers>

            </Label>

        </Frame>

        <Button Style="{DynamicResource bstyle_i3}"
                Text="{xct:Translate CreateRequest}"
                Command="{Binding CreateRequestTapCommand}"
                InputTransparent="True"
                VerticalOptions="EndAndExpand">

            <Button.Triggers>

                <Trigger TargetType="Button"
                         Property="InputTransparent"
                         Value="False">

                    <Setter Property="Style" Value="{DynamicResource bstyle_i1}"/>

                </Trigger>

                <MultiTrigger TargetType="Button">

                    <MultiTrigger.Conditions>

                        <BindingCondition Binding="{Binding SelectedRequestType, Converter={StaticResource isNotNullOrEmptyConverter}}"
                                          Value="True"/>

                        <BindingCondition Binding="{Binding IsStartDateChanged}"
                                          Value="True"/>

                        <BindingCondition Binding="{Binding IsEndDateChanged}"
                                          Value="True"/>

                    </MultiTrigger.Conditions>

                    <Setter Property="InputTransparent" Value="False"/>

                </MultiTrigger>

            </Button.Triggers>

        </Button>

    </StackLayout>

</pages:BaseContentPage>
